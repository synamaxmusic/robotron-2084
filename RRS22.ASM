;        STTL  ROBOT OPERATING SYSTEM

;        IF    NOL             ;Fixme was: IFNC  &A,NOL

;        LIB   "src/RRF.ASM"

;        ELSE 

;        OPT   NOL
;        LIB   "src/RRF.ASM"
;        OPT   LIS

;        ENDIF

        ORG   ROSORG
        JMP   INITV
        JMP   ASCANV
        JMP   SNDOUT
        JMP   SCRTRV
        JMP   SCOREV
        JMP   SCRT0V
        JMP   SCRCLV
        JMP   DMAOFV
        JMP   DMAONV
        JMP   BLKCLV
        JMP   PCTOFV
        JMP   PCTONV
        JMP   COLSTV
        JMP   COL0V
        JMP   HEXBCV
        JMP   BCDBNV
        JMP   OINITV
        JMP   CRINIV
        JMP   PINITV
        JMP   RANDV
        JMP   R16V
        JMP   RMAXV
        JMP   RANDUV
        JMP   PLINDV
        JMP   PLDXV
        JMP   SNDLDV
        JMP   KILO1V
        JMP   GETOBV
        JMP   MAKEPV
        JMP   MKPRCV
        JMP   MSPRCV
        JMP   KILLV
        JMP   GNCIDV
        JMP   SUCIDV
        JMP   SLEEPV
        JMP   RIPV11
        JMP   MPROBV
        JMP   GETBV
        JMP   KILLBV
        JMP   KILLFV
        JMP   KILFPV
        JMP   GETRBV
        JMP   KILRBV
        JMP   GETPSV
        JMP   KILPSV
        JMP   GETHMV
        JMP   KILHMV
        JMP   DMAFNV
        JMP   MPCTNV
        JMP   BLKONV
        JMP   EXEC
        JMP   P1SWV
        JMP   P2SWV
        JMP   DIVABV
        JMP   RCMSAZ
        JMP   RCMSBZ
        JMP   RCMSDZ
        JMP   WCMSAZ
        JMP   WCMSBZ
        JMP   WCMSDZ
        JMP   BCDBNV
        JMP   RWMOVV
        JMP   AUDZ
        JMP   AUD1Z
        JMP   INIT20
        JMP   LF               ;LASER LFLASH COLOR ROUTINE
        JMP   BCHA             ;BCD TO HEX IN A (FIX STUPID BUGS)
;*
;*SOUNDS
;*
RPSND   FCB   $EF,$01,$20,$1E,0 ;REPLAY
CNSND   FCB   $FF,$01,$20,$0C,0 ;COIN
        FCB   $FF,$01,$20,$20,0
        FCB   $FF,$03,$10,$24,0
        FCB   $FF,$01,$20,$27,0
        FCB   $FF,$01,$20,$2D,0
        FCB   $FF,$02,$10,$35,0
        FCB   $FF,$01,$20,$3A,0
        FCB   $FF,$01,$20,$3E,0
;*
;*INITIALIZE
;*
;*PIA INIT TAB
PIATAB  FDB   $0034,$FF35,$0034,$003C
        FDB   PIA0,PIA1,PIA2,PIA3
;*
INITV   ORCC  #$FF             ;NO INTERRUPTS YET PLEASE
        LDS   #HSTK            ;ONLY SETUP HARDWARE STACK
        LDA   #RAM>>8          ;SETUP DIRECT PAGE
        TFR   A,DP
        LDA   #1
        STA   RWCNTL           ;LETS RUN OUT OF ROMS TODAY.
;* PIAS INITIALIZED HERE.
        LDX   #PIATAB
INIT1   CLRA 
        CLRB 
        STD   [8,X]            ;CLEAR CR, SELECT DDR
        LDD   ,X++
        STD   [6,X]            ;SET DDR,CR
        CMPX  #PIATAB+8
        BNE   INIT1
        LDA   #$FF             ;SHUT UP SOUND BOARD
        STA   SOUND
        JSR   SCRCLR           ;CLEAR THE SCREEN
        LDA   #$3F
        STA   SOUND            ;GET READY TO SEND A WHETEVER TO THE SOUND
;*CLEAR RAM STORAGE
        LDX   #RAM
INIT10  CLR   ,X+
        LDB   #WDATA
        STB   WDOG
        CMPX  #HSTK								;;Fixme was: CPX   #HSTK
        BNE   INIT10
        LDD   #$A55A
        STD   HSEED
        LDA   #$60
        STA   XXX2             ;INIT 2ND IRQ LINE #
        JSR   P1SW             ;UPRIGHT PLEASE
        JSR   PINIT            ;INIT PROCESSES
        BSR   INIT20           ;MISC ROUTINES
        JSR   CMINIT           ;SETUP CMOS
        LDD   #$FFFF           ;STICK SWITCHES
        STD   PIA01
        STD   PIA21
        LDA   #2
        STA   PLRCNT
        LDX   #CREDST
        JSR   RCMOSA
        TFR   A,B
        CMPA  #$20
        BHI   INIT11
        ANDB  #$F
        CMPB  #9
        BLO   INIT12
INIT11  CLRA 
        JSR   WCMOSA
INIT12  STA   CREDIT           ;CREDIT CRASH
        MAKP  GOV
        LDA   #$2C             ;BACKY OFFY
        STA   SOUND
        COM   STATUS           ;FF---STATUS
        ANDCC #$00             ;ENABLE IRQ,FIRQ
        BRA   EXEC
;*
;*MISC INIT ROUTINES
;*
INIT20  JSR   CRINIT
        JSR   PRINV            ;INIT TEXT
        JSR   EXINIT           ;INIT EXPLOSIONS
        JMP   OINIT            ;INIT OBJECT LIST
;*
;*EXECUTIVE LOOP
;*
EXEC    LDX   #ACTIVE
        STX   CRPROC
EXEC0   LDA   TIMER
        CMPA  #2
        BLO   EXEC0
        ASLA 
        ASLA 
        ASLA 
        ADDA  OVCNT
        LSRA 
        STA   OVCNT
        CLR   TIMER
        JSR   RANDV
        LDA   STATUS
        BITA  #$04
        BNE   SWP
        JSR   EXUPD            ;UPDATE YOUR EXPLOSIONS
;*
;*SWITCH PROCESSING
;*
SWP     LDX   SWPROC
        BNE   SWP1
        LDX   SWPROC+4
        BEQ   SWPX
        LDD   SWPROC+6
        CLR   SWPROC+4
        CLR   SWPROC+5
        BRA   SWP3
SWP1    LDD   SWPROC+2
        CLR   SWPROC
        CLR   SWPROC+1
SWP3    ANDB  STATUS
        BNE   SWP
        JSR   MKPROC
        BRA   SWP
SWPX    EQU   *
;*
;*PROCESS DISPATCH
;*
DISP    LDU   ACTIVE
        BEQ   DISPX
DISP1   DEC   PTIME,U
        BNE   DISP2
        STU   CRPROC
        JMP   [PADDR,U]
;*
;*SLEEP
;*A=SLEEP TIME X 16MSEC
;*X=WAKEUP ADDR
;*
SLEEPV  LDU   CRPROC
        STA   PTIME,U
        STX   PADDR,U
DISP2   LDU   ,U
        BNE   DISP1
DISPX   LDS   #HSTK
        BRA   EXEC
;*
;*SUICIDE
;*
SUCIDV  LDX   CRPROC
        LDS   #HSTK
        BSR   KILLV
        LEAU  ,X
        BRA   DISP2            ;GET NEW CRPROC
;*
;*GENOCIDE : KILL EVERYONE EXCEPT FOR YOURSELF
;*
GNCIDV  PSHS  A,X
        LDX   #ACTIVE
GNC1    LDX   ,X
        BEQ   GNCX
        CMPX  CRPROC
        BEQ   GNC1             ;DO NOT KILL SELF
        LDA   PTYPE,X          ;DONT KILL COINS
        CMPA  #CTYPE
        BEQ   GNC1
        BSR   KILLV
        BRA   GNC1
GNCX    PULS  A,X,PC
;*
;*KILL
;*X=PROCESS TO KILL
;*
KILLV   PSHS  D,U
        LDU   #ACTIVE
KILP1   CMPX  ,U
        BNE   KILPLP           ;NO MATCH
        LDD   ,X               ;GET FORWARD LINK OF DEAD GUY
        STD   ,U
        LDA   PCOD,X
        BEQ   KILP2            ;REG PROCESS
        LDD   SPFREE           ;SUPER PROCESS
        STX   SPFREE
        BRA   KILP3
KILP2   LDD   FREE
        STX   FREE             ;PUT HIM AT HEAD OF FREE
KILP3   STD   ,X
        LEAX  ,U               ;SAVE CRPROC FOR SUICIDE
        PULS  D,U,PC
KILPLP  LDU   ,U
        BNE   KILP1
        BSR   ERROR
ERROR   SEI                   ;ERROR TRAP
        BRA   *
;*
;*MAKE A SUPER PROCESS
;*X = START ADDR
;*A = USER TYPE
;*X =RETURNED WITH DATA BLOCK POINTER
MSPRCV  PSHS  A,Y,U
        LDU   SPFREE
        BNE   *+3
        JSR   ERROR            ;ERROR TRAP
        LDY   ,U
        STY   SPFREE
        LDA   #1
        STA   PCOD,U
        LDA   ,S               ;GET TYPE
        BRA   MKP1
;*
;*MAKE A PROCESS
;*X=START ADDR
;*A=USER TYPE
;*X RETURNED WITH DATA BLOCK PTR
;*
MKPRCV  PSHS  A,Y,U
        LDU   FREE
        BNE   MKP0             ;NOT OUT
        JSR   ERROR
MKP0    LDY   ,U
        STY   FREE             ;DELINK
        CLR   PCOD,U
MKP1    STX   PADDR,U
        STA   PTYPE,U
        LDA   #1
        STA   PTIME,U          ;INIT TIME
        LDX   [CRPROC]
        STU   [CRPROC]
        STX   ,U               ;LINK IN
        LEAX  ,U               ;SETUP X AS DATA BLOCK
        PULS  A,Y,U,PC
;*
;*MAKE A REG PROCESS
;*X RET WITH PROC PTR
;*[RET]=SADDR, TYPE=STYPE, RET=RET+2
;*
MAKEPV  PSHS  U,A
        LDU   3,S              ;GET X
        PULU  X
        STU   3,S              ;NEW RETURN
        LDA   #STYPE
        BSR   MKPRCV
        PULS  U,A,PC
;*
;*GET OBJECT LIST CELL IN X
;*CALLER MUST INSERT INTO OWN LIST
GETOBV  PSHS  D
        LDX   OFREE
        BNE   GETOB1           ;NOT OUT
        JSR   ERROR
GETOB1  LDD   OLINK,X
        STD   OFREE
        LDB   #2
GETOB2  CLR   B,X              ;ZERO OUT DATA CELL
        INCB 
        CMPB  #OSIZE
        BNE   GETOB2
        PULS  D,PC
;*
;*KILL OBJECT CELL IN X
;*
KILO1V  CMPX  ,U               ;MATCH?
        BNE   KILOLP
KILO2   LDY   [,U]             ;UNLINK
        STY   ,U
        LDY   OFREE
        STX   OFREE
        STY   ,X
        PULS  X,Y,U,PC
KILOLP  LDU   ,U
        BNE   KILO1V           ;CONTINUE
        JSR   ERROR
;*KILL ROBOT
KILRBV  PSHS  X,Y,U
        LDU   #RPTR
        JMP   KILO1
;*KILL POST
KILPSV  PSHS  X,Y,U
        LDU   #PPTR
        JMP   KILO1
;*KILL HUMAN
KILHMV  PSHS  X,Y,U
        LDU   #HPTR
        JMP   KILO1
;*GET ROBOT
GETRBV  PSHS  D
        JSR   GETOBJ
        LDD   RPTR
        STX   RPTR
GETO1   STD   OLINK,X
        PULS  D,PC
;*GET POST
GETPSV  PSHS  D
        JSR   GETOBJ
        LDD   PPTR
        STX   PPTR
        BRA   GETO1
;*GET HUMAN
GETHMV  PSHS  D
        JSR   GETOBJ
        LDD   HPTR
        STX   HPTR
        BRA   GETO1
;*GET MOTION OBJECT
GETBV   PSHS  D
        JSR   GETOBJ
        LDD   OPTR
        BRA   GETO1
;*KILL A MOTION OBJECT
KILLBV  PSHS  X,Y,U
        LDU   #OPTR
        JMP   KILO1
;*
;* RIPOFF CHECK
;*
RIPV11  LDY   #RIPV1-$2857
        MAKP  RIPC0
        STY   PD+2,X
        RTS  
;*
;*KILL A MOTION OBJECT AND TURN IT OFF
;*X=OBJECT
KILLFV  BSR   KILLBV
        JMP   DMAOFF
;*
;*KILL A MOTION OBJECT,TURN IT OFF,AND KILL ASSOC PROCESS
;*X=OBJ, OBJID,X=PROCESS
;*
KILFPV  PSHS  X
        BSR   KILLFV
        LDX   OBJID,X
        JSR   KILL
        PULS  X,PC
;*
;*MAKE A PROCESS+OBJECT
;*RET=PROCESS,RET+2=OBJECT PICT,RET+4=COLL VECTOR,RET+6=BLIP
;*U RETURNED WITH PROCESS, X=OBJECT
;*X-PD,U;0-OXV,X OYV,X
;*RET EQ IF NOTHING LEFT
MPROBV  PSHS  D,Y
        LDX   OFREE
        BEQ   MPRER            ;NONE LEFT
        LDX   FREE
        BEQ   MPRER
        CLRA 
        LDU   4,S
        PULU  X
        JSR   MKPROC
        LEAY  ,X
        JSR   GETOB
        LDD   ,U++
        STD   OLDPIC,X
        STD   OPICT,X
        PULU  D
        STD   OCVECT,X
        STU   4,S              ;NEW RET ADDR
        LEAU  ,Y
        STU   OBJID,X
        STX   PD,U
        CLRA 
        CLRB 
        STD   OYV,X
        STD   OXV,X
        COMA                   ; NE
        PULS  D,Y,PC
MPRER   LDU   4,S              ;CLEAN UP STACK
        LEAU  8,U
        STU   4,S
        CLRA                   ; EQ, NONE LEFT
        PULS  D,Y,PC
RIPC0   LDA   RIPFLG           ;ALREADY ACTIVE??
        BNE   RIPDIE           ;THEN NO NEED TO LIVE.
        INC   RIPFLG           ;EXCLUDE PLEASE
        LDA   #$3
        LDX   PD+2,U
        LEAX  $2857,X
        STX   PD+2,U
        STA   PD,U
RIPC2   NAP   8,RIPC1
RIPC1   LDA   PIA2
        CMPA  #$A1             ;NEW COMBO
        BEQ   RIPC4
        CMPA  #$58             ;STILL OLD COMBO??
        BEQ   RIPC2            ;THEN DON'T COUNT
        DEC   PD,U
        BNE   RIPC2
        BRA   RIPC3
RIPC4   LDA   #$3
        STA   PD,U
RIPC5   NAP   8,RIPC6
RIPC6   LDA   PIA2
        CMPA  #$42             ;DN-START1-TH-FIRE
        BNE   RIPCC7           ;DONE!
        JMP   [PD+2,U]
RIPCC7  CMPA  #$A1             ;OLD COMBO??
        BEQ   RIPC5
        DEC   PD,U             ;LESS TIME
        BNE   RIPC5
RIPC3   CLR   RIPFLG
RIPDIE  JMP   SUCIDE
;*
;*SOUND OUTPUT
;*B=SND TO MAKE
;*
SNDOUT  PSHS  A,B,CC
        ORCC  #$FF
        LDA   #$3F
        STA   SOUND
        COMB 
        ANDB  #$3F             ;DONT TURN ON LEDS
        STB   SOUND
        PULS  A,B,CC,PC
;*
;*SOUND LOADER
;*D=ADDR OF SOUND
;*TABLE FORMAT:SNDPRI,N*(REPCNT,SNDTMR(16MSEC),SND#);END:REPCNT=0
SNDLDV  PSHS  X,D,CC
        TFR   D,X
        LDA   ,X
        CMPA  SNDPRI
        BLO   SNDLDX           ;PRIORITY NOT HI ENOUGH
        STA   SNDPRI
        LEAX  -2,X
        SEI  
        STX   SNDX
        LDD   #$0101
        STD   SNDTMR           ;INIT TIMER,REPCNT
SNDLDX  PULS  X,D,CC,PC
;*
;*SOUND SEQUENCER
;*
SNDSEQ  LDA   SNDTMR
        BEQ   SNDSX
        DEC   SNDTMR
        BNE   SNDSX
        LDX   SNDX
        DEC   SNDREP
        BNE   SNDS1
        LEAX  3,X              ;GET NEXT
        STX   SNDX
        LDA   ,X
        BNE   SNDS0            ;SOUND OVER?
        STA   SNDPRI           ;YIP
        BRA   SNDSX
SNDS0   STA   SNDREP
SNDS1   LDD   1,X
        STA   SNDTMR
SNDSX1  BSR   SNDOUT
SNDSX   EQU   *
;*
;*SWITCH SCAN
;*TRIGGER=LAST 2 ZERO, NOW 1 GAME SWITCH
;*TRIGGER=LAST 1 ZERO, NOW 2 1'S COINS
SSCAN   LDA   PIA0
        BITA  #$40
        BEQ   SSC00
        LDA   #60
        STA   SLMCNT
SSC00   LDA   SLMCNT
        BEQ   SSC0A
        DEC   SLMCNT
SSC0A   LDA   LCCNT
        BEQ   SSC0B
        DEC   LCCNT
SSC0B   LDA   CCCNT
        BEQ   SSC0C
        DEC   CCCNT
SSC0C   LDA   RCCNT
        BEQ   SSC0
        DEC   RCCNT
SSC0    LDA   STATUS
        BPL   SSCX             ;GAME ON... HE CANT START!!!
        LDA   INDIAG
        BNE   CSCX             ;NO SWITCHES, TESTING
        LDA   PIA21
        ORA   PIA22
        COMA 
        LDB   PIA21
        STB   PIA22
        LDB   PIA2
        STB   PIA21
        ANDA  PIA21
        ANDA  #$30             ;MASK OUT STIKS
        BEQ   SSCX
        LDX   #STRT1
        BITA  #$10
        BNE   SSC1
        LDX   #STRT2
SSC1    BSR   SWITCH
SSCX    EQU   *
;*
;*SCAN COIN SWITCHES
;*
CSCAN   LDA   INDIAG
        BNE   CSCX             ;NO SWITCHES TESTING
        LDA   PIA01
        ORA   PIA02
        COMA 
        LDB   PIA01
        STB   PIA02
        LDB   PIA0
        ANDB  #$3F
        STB   PIA01
        BITA  PIA01
        BEQ   CSCX             ;NO HIT
        LDX   #120
CSC1    LEAX  -1,X             ;1 MSEC DELAY
        BNE   CSC1
        LDB   PIA0             ;DOUBLE CHECK
        ANDB  PIA01
        STB   PIA01
        ANDA  PIA01
        BEQ   CSCX             ;NOBODY THERE
        LDX   #CSWTAB-2
CSC2    LEAX  2,X
        LSRA 
        BCC   CSC2
        LDX   ,X
        BSR   SWITCH
        LDA   #CTYPE
        STA   2,U
        RTS  
SWITCH  LDU   #SWPROC
        LDD   ,U
        BEQ   SSC2
        LEAU  4,U
SSC2    STX   ,U
        CLR   2,U
        CLR   3,U
CSCX    RTS  
;*COIN SWITCH TABLE
CSWTAB  FDB   0,ADVSW,RCOIN,HSBUTV,LCOIN,CCOIN,0,0

        FCC   " ROBOTRON: 2084 (TM) "
        FCC   " COPYRIGHT 1982 WILLIAMS ELECTRONICS INC. "
        FCC   " ALL RIGHTS RESERVED "

;*
;*SWITCH YOUR SCREEN
;*
P1SWV   PSHS  D
        LDD   #$013C
        BRA   PSW1
P2SWV   PSHS  D
        LDD   #$0334
PSW1    STA   RWCTMP
        STA   RWCNTL
        STB   PIA3+1
        PULS  D,PC
;*
;* CMOS PRIMITIVE FOR READING
;*
RCMSAZ  EQU   *
RCMOS   LDA   1,X              ;GET LSB						;;Fixme was: LDAA  1,X
        ANDA  #$0F             ;LEAVE ONLY LS
        PSHS  A                ;SAVE IT
        LDA   ,X++             ;GET MSB + AUTO INC				;;Fixme was: LDAA  ,X++
        ASLA 
        ASLA 
        ASLA 
        ASLA                   ; LS TO MSB
        ADDA  ,S+              ;GET LSB + FIX STACK
DRTS    RTS                   ;BYE
;*
;* READ CMOS INTO D POINTED TO BY X: A=X,X+1; B=X+2,X+3
;*
RCMSDZ  BSR   RCMSAZ           ;GET THE FIRST BYTE+FALL THRU FOR 2ND
;*
;* READ CMOS INTO B POINTED TO BY X
;*
RCMSBZ  PSHS  A                ;SAVE A
        BSR   RCMSAZ           ;GET IN A
        TFR   A,B              ;PUT IT IN B
        PULS  A,PC             ;DONE
;*
;* WRITE TO CMOS PRIMITIVE
;*
WCMSAZ  EQU   *
        PSHS  A                ;SAVE WHATS TO BE WRITTEN
        STA   1,X              ;SAVE LSB					;;Fixme was: STAA  1,X
        LSRA                   ; MS TO LS
        LSRA 
        LSRA 
        LSRA 
        STA   ,X++             ;SAVE MSB AND AUTO INC				;;Fixme was: STAA  ,X++ 
        PULS  A,PC             ;DONE
;*
;* WRITE CMOS FROM D TO X: A=X,X+1; B=X+2,X+3
;*
WCMSDZ  BSR   WCMSAZ           ;DO IT AND FALL THRU FOR 2ND
;*
;* WRITE CMOS FROM B TO X
;*
WCMSBZ  PSHS  A                ;SAVE A
        TFR   B,A              ;MOVE B TO A
        BSR   WCMSAZ           ;FAKE IT
        PULS  A,PC             ;DONE
;*
;* ACRED: ADDS A CREDITS TO TOTAL CREDITS; 99 MAX
;*
ACRED   PSHS  A,X              ;SAVE
        ADDA  CREDIT           ;GET PRESENT
        DAA                    
        BCC   ACRD0            ;NO OVERFLOW
        LDA   #$99             ;YES, STAY AT 99					;;Fixme was: LDAA  #$99  
ACRD0   STA   CREDIT           ;SAVE NEW COUNT                                  ;;Fixme was: STAA  CREDIT
        LDX   #CREDST          ;BACKUP CREDITS
        JSR   WCMOSA
        PULS  X,A,PC           ;GO BACK CLEAN
;*
;* COIN SLOT ROUTINES
;*
COINR   PSHS  D,X              ;SAVE STATE
        LDB   #$03             ;3RD TOTALS(RIGHT COIN)				;;Fixme was: LDAB  #$03
        BRA   COINZ            ;HANDLE BELOW
COINC   PSHS  D,X              ;SAVE STATE
        LDB   #$02             ;2ND TOTALS(CENTER COIN)				;;Fixme was: LDAB  #$02 
        BRA   COINZ            ;HANDLE BELOW
COINL   PSHS  D,X              ;SAVE STATE
        LDB   #$01             ;1ST TOTALS(LEFT COIN)				;;Fixme was: LDAB  #$01 
COINZ   JSR   AUD1             ;BUMP COUNT BY 1
        ASLB                   ; FOR CMOS
        LDX   #SLOT1M-2        ;POINT TO START-2
        ABX                    ; OFFSET
        JSR   RCMOSB           ;GET CORRECT SLOT X
        JSR   BCDBIN           ;CONVERT TO BINARY
        LDA   BUNITS           ;GET PRESENT BONUS UNITS				;;Fixme was: LDAA  BUNITS
        PSHS  B                ;AND ADD PRESENT COUNT TO IT
        ADDA  ,S
        STA   BUNITS           ;UPDATE						;;Fixme was: STAA  BUNITS
        LDA   CUNITS                                                            ;;Fixme was: LDAA  CUNITS
        ADDA  ,S+              ;GET PRESENT
        STA   CUNITS           ;UPDATE						;;Fixme was: STAA  CUNITS 
        LDX   #MINUNT          ;GET MINIMUM UNITS
        JSR   RCMOSB           ;FROM CMOS
        JSR   BCDBIN           ;WORK IN BINARY!!
        PSHS  B                ;FOR CBA
        CMPA  ,S+              ;ENOUGH?
        BCC   COIN1            ;YES, GIVE IT
        PULS  D,X,PC           ;NOT ENOUGH SO FAR, BYE!!
COIN1   LDX   #CUNITC          ;HOW MANY?
        JSR   RCMOSB           ;GET IT
        JSR   BCDBIN           ;CONVERT TO HEX
        BSR   DIVABV           ;SAVE REMAINDER IN B
        PSHS  A                ;SAVE COUNT TO BE AWARDED FOR A WHILE
        STB   CUNITS           ;SAVE REMAINDER					;;Fixme was: STAB  CUNITS
        LDX   #CUNITB          ;BONUS REQUIRES HOW MANY?
        JSR   RCMOSB           ;IN B
        LDA   BUNITS           ;GET BONUS SO FAR				;;Fixme was: LDAA  BUNITS 
        BSR   BCDBNV           ;CONVERT TO BINARY
        BSR   DIVABV           ;DIVIDE
        TSTA                   ; YET?
        BEQ   COIN2            ;NO
        CLR   CUNITS           ;YES, RESET ANY EXTRA
        CLR   BUNITS
COIN2   ADDA  ,S+              ;GET OTHER CREDITS EARNED
        DAA                    
        LDB   #$04             ;BUMP TOTPDC					;;Fixme was: LDAB  #$04 
        JSR   AUD              ;BY THE COUNT PAID FOR
        JSR   ACRED            ;ADD TO CREDITS COUNTER
        PULS  D,X,PC           ;CLEAN + GO
;*
;* DIVAB: A/B, REMAINDER IN B
;*
DIVABV  PSHS  B                ;SAVE
        TSTB                   
        BNE   DIVAB0           ;YES, HANDLE
        CLRA                   ; SET TO 0
        PULS  B,PC             ;CLEAN RETURN
DIVAB0  EXG   A,B              ;FOR DAA
        LDA   #$99             ;START-1						;;Fixme was: LDAA  #$99
DIVAB1  ADDA  #$01             ;NEXT
        DAA                    
        SUBB  ,S               ;TAKE AWAY N
        BCC   DIVAB1           ;LOOP TILL OVERFLOW
        ADDB  ,S+              ;ADD REMAINDER + FIX STACK
        RTS                    

RIPTV   FDB   RIPTAB-$7F

;* BCD TO BINARY IN A
;* LOCAL LABEL - BCHA
;* GLOBAL NEWBCH
;*
BCHA    PSHS  B
        TFR   A,B
        BSR   BCDBNV
        TFR   B,A
        PULS  B,PC
;*
;*BCD-HEX CONVERT
;*B=BCD-HEX
BCDBNV  PSHS  A
        CLRA 
BCH1    CMPB  #$10
        BLO   BCH2
        ADDA  #10
        SUBB  #$10
        BRA   BCH1
BCH2    PSHS  A
        ADDB  ,S+
        PULS  A,PC
;*
;*HEX-BCD CONVERT
;*A=HEX-BCD
HEXBCV  PSHS  B
        TFR   A,B
        CLRA 
HBC1    CMPB  #10
        BLO   HBC2
        ADDA  #$10
        DAA  
        SUBB  #10
        BRA   HBC1
HBC2    PSHS  B
        ADDA  ,S+
        DAA  
        PULS  B,PC
;*
;*COIN SWITCHES
;*LEFT
LCOIN   LDX   #LCCNT
        LDY   #COINL
        BRA   COIN
;*RIGHT
RCOIN   LDX   #RCCNT
        LDY   #COINR
        BRA   COIN
;*CENTER
CCOIN   LDX   #CCCNT
        LDY   #COINC
;*
;*COIN ROUTINE
;*X=DEBOUNCE COUNTER
;*B=ROUTINE
COIN    LDA   SLMCNT
        BNE   SLAMX
        LDA   ,X
        BNE   SLAMX
        LDA   #$16             ;DEBOUNCE TIME
        STA   ,X
        STY   PD2,U            ;SAVE JUMP
        NAP   10,CN1
CN1     LDA   SLMCNT
        BNE   SLAMX            ;SLAM, DITCH
        LDA   #5               ;RANDOM COIN SOUND
        LDB   SEED
        ANDB  #7
        MUL  
        ADDD  #CNSND
        JSR   SNDLD
        JSR   [PD2,U]
SLAMX   JMP   SUCIDE
RIPT1   FDB   PR57V-($76*3)
;* AUDIT: COUNT=A, COUNTER=B (1-7)
;*
AUD1Z   PSHS  D,X              ;SAVE STATE
        LDA   #$01             ;BUMP BY COUNT OF 1				;;Fixme was: LDAA  #$01
        BRA   AUD2
AUDZ    PSHS  D,X              ;SAVE STATE
AUD2    ANDB  #$0F             ;LIMIT TO 0-F
        ASLB                   ; INTO 4X
        PSHS  B
        ASLB 
        ADDB  0,S+             ;6X
        LDX   #CMOS-4+$100     ;POINT TO START-6 (CREDITS TAKES UP 2)
        ABX                    ; THE CORRECT DESTINATION
        JSR   RCMOSB
        PSHS  B
        JSR   RCMOSB
        PSHS  B
        JSR   RCMOSB
        PSHS  B
        ADDA  ,S
        DAA  
        STA   ,S
        LDA   1,S
        ADCA  #0
        DAA  
        STA   1,S
        LDA   2,S
        ADCA  #0
        DAA  
        LEAX  -6,X
        JSR   WCMOSA
        PULS  B
        PULS  A
        JSR   WCMOSD
        PULS  A
AUDX    PULS  D,X,PC           ;CLEAN UP
;*
;*GET PLAYER STATE INDEX
;*
PLINDV  PSHS  A
        LDA   CURPLR
PLND1   LDX   #PLDATA
        DECA 
        BEQ   PLINX
        LDX   #ZP2SCR
PLINX   PULS  A,PC
PLDXV   PSHS  A
        BRA   PLND1
;*
;*RANDOM # 1-A UNIFORM DIST
;*
RANDUV  PSHS  B
        TFR   A,B
        BSR   RANDV
        MUL  
        INCA 
        PULS  B,PC
;*
;*RANDOM #<=A TOP WEIGHTED DIST
;*
RMAXV   PSHS  A
        BSR   RANDV
RMAX1   CMPA  ,S
        BLS   RMAXX
        LSRA 
        BRA   RMAX1
RMAXX   TSTA 
        BNE   RMAXXX
        INCA 
RMAXXX  LEAS  1,S
        RTS  
;*16-BIT RANDOM
R16V    BSR   RANDV
        LDB   LSEED
        RTS  
;*
;*RANDOM NUMBER GENERATOR
;*
RANDV   PSHS  B
        LDB   SEED
        LDA   #3
        MUL  
        ADDB  #17
        LDA   LSEED
        LSRA 
        LSRA 
        LSRA 
        EORA  LSEED
        LSRA 
        ROR   HSEED
        ROR   LSEED
        ADDB  LSEED
        ADCB  HSEED
        STB   SEED
        LDA   SEED
        PULS  B,PC
;*
;*INITIALIZE PROCESS DATA STRUCTURE
;*
PINITV  PSHS  X,D,U
        CLRA 
        CLRB 
        LDX   #PTAB
        LDU   #HCK1-$184
        STX   FREE
PINIT1  LEAX  PSIZE,X
        STX   -PSIZE,X
        CMPX  #TABEND-PSIZE
        BNE   PINIT1
        STD   ,X
        STD   ACTIVE
;*SUPER PROCESSES
        LDX   #SPTAB
        STX   SPFREE
PINIT2  LEAX  SPSIZE,X
        STX   -SPSIZE,X
        CMPX  #SPTEND-SPSIZE
        BNE   PINIT2
        STD   ,X
        LDX   #ACTIVE
        STX   CRPROC
        LDB   #$7
        TFR   D,X
P3NITT  ADDA  ,X
        LEAX  $10,X
        CMPX  #$8935
        BLO   P3NITT
        STA   $184,U
        PULS  X,D,PC,U

RIPV1   JSR   GNCIDE           ;STOP ALL OF THE ACTION
        LDA   #$FF
        STA   STATUS           ;FOR REAL!
        NAP   1,RIP99          ;STOP SAM BIT INTERFERENCE
RIP99   JSR   SCRCLR           ;CLEAR THE SCREEN
        JSR   PRINV            ;INITIALIZE PRINTING PARAMETERS
        LDB   #$7F
        STB   PCRAM+1          ;MAKE SURE ITS VISIBLE
        LDY   RIPTV
        LEAY  B,Y
RIPST0  LDA   ,Y+              ;GET A BYTE
        BEQ   RIPEND           ;END.
        CMPA  #$2              ;CHECK TIME??
        BNE   RIPST8
        LDA   PIA2             ;CHECK LEVER
        BITA  #$40
        BEQ   RIPEN2           ;HE LET GO...CAN IT!
        BRA   RIPST0           ;GO AND GET NEXT BYTE.
RIPST8  CMPA  #$1              ;CURSOR??
        BNE   RIPST1           ;NOPE
        LDX   ,Y++
        CLR   TXFLAV           ;MAKE IT ALL LINE UP PRETTY
        BRA   RIPST0
RIPST1  ADDA  #$2E             ;GET OUT OF READABLE ASCII
        LDU   #RIPST0
        PSHS  U
        LDU   RIPT1
        LDB   RIPT2
        LEAU  B,U
        LEAU  B,U
        LEAU  B,U
        JMP   ,U
;* BRA RIPST0 THIS IS WHAT WOULD HAVE FOLLOWED A CONVENTIONAL JSR.
RIPEND  NAP   1,RIPEN1
RIPEN1  LDA   PIA2
        BITA  #$40
        BNE   RIPEND
RIPEN2  JSR   SCRCLR
        JMP   [$EFFE]          ;END RESET

;*INITIALIZE COLOR RAM
CRINIV  LDX   #CRTAB2								;;Fixme was: LDX   #CRTAB (duplicate symbol)
        LDU   #PCRAM
        LDB   #16
INITC   LDA   ,X+
        STA   ,U+
        DECB 
        BNE   INITC
        RTS  
;*
;*INITIALIZE OBJECT LIST
;*
OINITV  PSHS  CC,X,D
        ORCC  #$FF             ;OFF INTERRUPTS
        LDX   #OLIST
        STX   OFREE
OINIT1  LEAX  OSIZE,X
        STX   -OSIZE,X
        CMPX  #OLEND-OSIZE
        BNE   OINIT1
        CLRA 
        CLRB 
        STD   ,X               ;LAST LINK 0
        STD   RPTR
        STD   OPTR
        STD   OBPTR
        STD   PPTR
        STD   HPTR
        PULS  CC,X,D,PC
;*
;*COLLISION DETECT
;*U=PICTURE DESC, D=UL COORD X,Y
;*X=OBJECT DESC
;******MODIFIED FOR OBJECTS STORED BY WIDTH FOR DMA*********
COL0V   STD   ULX              ;CALC LOWER RT
        ADDD  OBJW,U
        STD   LRX              ;LR CORNER OF PLAYER
        BRA   COLLP
COL1    LDD   OBJX,X
        BEQ   COLLP            ;OFF SCREEN
        CMPA  LRX
        BHS   COLLP
        CMPB  LRY
        BHS   COLLP
        ADDD  [OPICT,X]        ;CALC LR
        CMPA  ULX
        BLS   COLLP
        CMPB  ULY
        BHI   IC1              ;CHECK INTERSECTION
COLLP   LDX   OLINK,X
        BNE   COL1
        RTS                    ; EQ
RIPT2   FCB   $76
;*
;*COMPARE FOR PICTURE INTERSECTION
;*FIND UPPERMOST
IC1     STU   CTEMP2           ;SAVE PLAYER DESC
        TST   PCFLG            ;NO PHONIES ON PLAYER
        BNE   IC99
        LDY   FONIPC,X         ;PHONY PICTURE?
        BNE   IC100
IC99    LDY   OPICT,X
IC100   SUBD  ,Y               ;SAVE OBJX FROM IRQ
        STY   XTEMP2           ;SAVE PICT USED
        STD   XTEMP
        CLRA 
        CLRB                   ; OFFSETS
        STD   OX1              ;GET OBJECT
        STD   PX1              ;PLAYER
        LDD   XTEMP
        SUBB  ULY              ;FIND UPERMOST
        BHI   IC10             ;PLAYER UPPERMOST
        NEGB 
        STB   OY1              ;OBJECT UPPERMOST
        BRA   IC2
IC10    STB   PY1
;*FIND LEFTMOST
IC2     SUBA  ULX
        BHI   IC20             ;PLAYER LEFTMOST
        NEGA 
        STA   OX1              ;OBJECT LEFTMOST
        BRA   IC3
IC20    STA   PX1
;*FIND LOWERMOST
;*CALC OY2
IC3     LDD   XTEMP            ;GET OBJX
        ADDD  OBJW,Y
        SUBB  LRY
        BHI   IC4              ;OBJECT LOWEST
        CLRB                   ; LOWEST
;*FIND RIGHTMOST
;*CALC OX2
IC4     SUBA  LRX
        BHI   IC40             ;OBJECT RIGHTMOST
        CLRA                   ; RIGHTMOST
;*CALC X,Y COUNT
IC40    STD   CTEMP            ;SAVE
        LDD   OBJW,Y           ;GET WIDTH,HEIGHT
        SUBD  OX1              ;OX1,OY1
        SUBD  CTEMP            ;OX2,OY2
        STD   XCNT             ;XCNT,YCNT
;*INIT SCAN PARAMETERS
;*Y=OBJECT ADDR
;*U=PLAYER ADDR
        LDA   OBJW,U
        STA   PLW
        LDB   PY1
        MUL  
        LDU   OBJDAT,U
        LEAU  D,U              ;INIT PLAYER INDEXSH
        LDA   OBJW,Y
        STA   OBW
        LDB   OY1
        MUL  
        LDY   OBJDAT,Y
        LEAY  D,Y              ;INIT OBJECT INDEX
        LDA   OX1
        LEAY  A,Y
        LDA   PX1
        LEAU  A,U
IC5     LDB   XCNT
        DECB 
IC50    LDA   B,U
        BEQ   IC6
        LDA   B,Y              ;CHECK
        BEQ   IC6
;*CALC SCREEN ADDR OF HIT
        LEAY  B,Y
        TFR   Y,D
        LDU   XTEMP2           ;GET PICT BASE
        SUBD  OBJDAT,U         ;OFFSET INTO ROM OBJECT
        LDY   OBJX,X
FC1     SUBB  OBJW,U           ;CALC DY (ROWS)
        SBCA  #0
        BCS   FC3
FC2     LEAY  1,Y
        SUBB  OBJW,U
        SBCA  #0
        BCC   FC2
FC3     ADDB  OBJW,U           ;CORRECT OVER SUB
        TFR   B,A              ;GET DX (COLS)
        CLRB 
        LEAU  D,Y
        STU   CENTMP
        JSR   [OCVECT,X]
        LDA   #1
        RTS                    
IC6     DECB 
        BPL   IC50             ;NOT FINISHED COLUMN
        LDD   OBW              ;GET OBHT,PLHT
        LEAY  A,Y
        LEAU  B,U
        DEC   YCNT
        BNE   IC5
        LDU   CTEMP2
        JMP   COLLP
;*
;*COLOR PROCESSES
;*
;*START COLOR PROCESSES
;*
COLSTV  MAKP  LASER
        MAKP  RGOLD
        MAKP  LF
        MAKP  RGB
        MAKP  BPR
        MAKP  DECAY
        RTS  

RIPTAB  FCB   $01,$0C,$28,$26,$1A,$1B,$25,$0C,$1B,$25
        FCB   $0C,$24,$21,$14,$21,$26,$24,$21,$20,$11,$0C,4,$21,$A,6,2
        FCB   $01,$0C,$58,$16,$17,$25,$1B,$19,$20,$17,$16
        FCB   $0C,$17,$2A,$15,$1E,$27,$25,$1B,$28,$17,$1E
        FCB   $2B,$0C,$18,$21,$24
        FCB   $01,$0C,$68,$29,$1B,$1E,$1E,$1B,$13,$1F,$25,$0C
        FCB   $17,$1E,$17,$15,$26,$24,$21,$20,$1B,$15,$25,$0C
        FCB   $1B,$20,$15,$0F,2
        FCB   $01,$0C,$78,$14,$2B,$0C,$17,$27,$19
        FCB   $17,$20,$17,$0C,$22,$0F,$0C,$1C,$13,$24,$28,$1B
        FCB   $25,$0C,$13,$20,$16,$0C,$1E,$13,$29,$24,$17,$20
        FCB   $15,$17,$0C,$17,$0F,$0C,$16,$17,$1F,$13,$24,$02
        FCB   $01,$0C,$A8,$15,$21,$22,$2B,$24,$1B,$19,$1A,$26
        FCB   $0C,$03,$0B,$0A,$04,$0C,$29,$1B,$1E,$1E,$1B,$13
        FCB   $1F,$25,$0C,$17,$1E,$17,$15,$26,$24,$21,$20,$1B
        FCB   $15,$25,$0C,$1B,$20,$15,$0F
        FCB   $01,$0C,$B8,$13,$1E,$1E,$0C,$24,$1B,$19,$1A,$26
        FCB   $25,$0C,$24,$17,$25,$17,$24,$28,$17,$16,$00,$17,$22,$30

;*
;*TABLE DRIVEN PROCESSES
;*
RGB     JSR   TABDRI
        FDB   RGBTAB,PCRAM+$B,8
RGBTAB  FCB   $38,$07,$C0,0
;*
DECAY   JSR   TABDRI
        FDB   DCATAB2,PCRAM+$C,2						;;Fixme was: FDB   DCATAB,PCRAM+$C,2 (DCATAB is a duplicate symbol)
DCATAB2 FCB   $C0,$C0,$D0,$E0,$F0,$F8,$FA,$BA,$7A,$3A				;;Fixme was: DCATAB (duplicate symbol)
        FCB   $34,$2D,$1F,$17,$F,7,6,5,4,3,2,1,0
;*BLU-PURPLE RED
BPR     JSR   TABDRI
        FDB   BPRTAB2,PCRAM+$E,1						;;Fixme was: FDB   BPRTAB,PCRAM+$E,1 (BPRTAB is a duplicate symbol)
BPRTAB2 FCB   $C0,$C1,$C2,$C3,$C4,$C5,$C6,$C7,$87,$87,$47,$47			;;Fixme was: BPRTAB (duplicate symbol)
        FCB   $07,$07,$47,$47,$87,$87,$C7,$C7,$C6,$C5,$C4,$C3
        FCB   $C2,$C1,0
;*RED-GOLD
RGOLD   JSR   TABDRI
        FDB   RGTAB,PCRAM+$F,6
RGTAB   FCB   $07,$07,$2F,0
;*LASER
LASER   JSR   TABDRI
        FDB   COLTAB,PCRAM+$D,2
;*
;*TABLE DRIVEN PROCESS
;*PD,U BASE ADDR
;*PD2,U OFFSET
;*PD3,U SLEEP TIME
;*PD4,U PLACE TO STORE
TABDRI  LDX   ,S++
        LDD   ,X++
        STD   PD,U
        LDD   ,X++
        STD   PD4,U
        LDD   ,X++
        STD   PD2,U
TABDRV  CLR   PD2,U
TABD    LDX   PD,U
        LDB   PD2,U
        INC   PD2,U
        LDA   B,X
        BEQ   TABDRV
        STA   [PD4,U]
        LDA   PD3,U
        LDX   #TABD
        JMP   SLEEP
;*
;*LASER FLASH
;*
LF      LDA   #$FF
        STA   PCRAM+$A
        NAP   2,LF1
LF1     LDA   SEED
        ANDA  #$1F
        LDX   #COLTAB
        LDA   A,X
        STA   PCRAM+$A
        NAP   6,LF
;*
;*COLOR TABLE
;*
COLTAB  FCB   $38,$39,$3A,$3B,$3C
        FCB   $3D,$3E,$3F,$37,$2F,$27,$1F,$17
        FCB   $47,$47,$87,$87,$C7,$C7
        FCB   $C6,$C5,$CC,$CB,$CA,$DA,$E8,$F8
        FCB   $F9,$FA,$FB,$FD,$FF,$BF,$3F,$3E
        FCB   $3C,0
;*
;*COLOR RAM TABLE
;*
CRTAB2  FCB   0                ;0 SPACED OUT					;;Fixme was: CRTAB (duplicate symbol)
        FCB   $07              ;1 RED
        FCB   $17              ;2 ORANGE
        FCB   $C7              ;3 PURPLE
        FCB   $1F              ;4 BROWN
        FCB   $3F              ;5 YELLOW
        FCB   $38              ;6 GREEN BRT.
        FCB   $C0              ;7 BLUE
        FCB   $A4              ;8 GRAY
        FCB   $FF              ;9 WHITE
        FCB   $38              ;A LASER FLASH
        FCB   $17              ;B RGB
        FCB   $CC              ;C DECAY
        FCB   $81              ;D LASER
        FCB   $81              ;E BLU PURP RED
        FCB   $07              ;F RED-GOLD
;*
;*ON DMA BLOCK
;*D=ADDR, Y=PICT
;*
BLKONV  PSHS  D,CC
        SEI  
        STD   DMADES
        LDD   ,Y
        EORA  #4
        EORB  #4
        STD   DMASIZ
        LDD   OBJDAT,Y
        STD   DMAORG
        LDB   XTEMP2
        STB   DMACON
        LDA   #$12
        STA   DMACTL
        PULS  D,CC,PC
;*
;*WRITE A PRETTY PICTURE WITH DMA
;*Y=PICT DESC,D=SCREEN ADDR X,Y
PCTONV  PSHS  D,CC
        SEI  
        STD   DMADES
        LDD   ,Y
        EORA  #4               ;4 CYCLES FOR GREGGY POOH
        EORB  #4
        STD   DMASIZ
        LDD   OBJDAT,Y
        STD   DMAORG
        LDA   #$2              ;WRITE FULL CARDBOARD BOX
        STA   DMACTL
        PULS  D,CC,PC
;*
;*ON MONOCHROME PICT
;*Y=PICT DESC
;*D=SCREEN ADDR
;*COLOR=XTEMP2
;*
MPCTNV  PSHS  D,CC
        SEI  
        STD   DMADES
        LDD   ,Y
        EORA  #4
        EORB  #4
        STD   DMASIZ
        LDD   OBJDAT,Y
        STD   DMAORG
        LDB   XTEMP2           ;GET THE COLOR
        STB   DMACON
        LDA   #$1A
        STA   DMACTL
        PULS  D,CC,PC
;*
;*OFF A PICTURE WITH DMA
;*Y=PICT DESC
;*D=SCREEN ADDR X,Y
;*
PCTOFV  PSHS  D,CC
        SEI  
        STD   DMADES
        LDD   ,Y               ;H/W
        EORA  #4
        EORB  #4
        STD   DMASIZ
        LDD   OBJDAT,Y
PCTOF1  STD   DMAORG
        LDD   #$1200           ;FULL CARDBOARD ERASE
        STB   DMACON
        STA   DMACTL
        PULS  D,CC,PC
;*
;*BLOCK CLEAR
;*X=ADDR, D=W,H
;*
BLKCLV  PSHS  D,CC
        SEI  
        STX   DMADES
        EORA  #4
        EORB  #4
        STD   DMASIZ
        LDD   #0
        BRA   PCTOF1
;*
;*DMA ON OBJECT
;*X=PTR TO OBJECT
;*
DMAONV  PSHS  D,U,CC
        LDU   OPICT,X
        LDD   ,U
        EORA  #4
        EORB  #4
        SEI  
        STD   DMASIZ
        BRA   DMAFON
;*
;*OFF OBJECT W/ DMA
;*X=PTR TO OBJECT
;*
DMAOFV  PSHS  D,U,CC
        LDU   OLDPIC,X
        LDD   ,U
        LDU   OBJDAT,U
        EORA  #4
        EORB  #4
        SEI  
        STD   DMASIZ
        LDD   OBJX,X
        STD   DMADES
        STU   DMAORG
        LDD   #$1A00
        STB   DMACON
        LDB   OFLAV,X
        BPL   DMAOF1
        ORA   #$20
DMAOF1  STA   DMACTL
        PULS  D,U,CC,PC
;*
;*OFF OLDIE AND ON NEW GUY
;*X= PTR TO OBJECT
;*
DMAFNV  PSHS  D,U,CC
        LDU   OLDPIC,X
        LDD   ,U
        LDU   OBJDAT,U
        EORA  #4
        EORB  #4
        SEI  
        STD   DMASIZ
        LDD   OBJX,X
        STD   DMADES
        STU   DMAORG
        LDD   #$1A00
        STB   DMACON
        LDB   OFLAV,X
        BPL   DMAFN1
        ORA   #$20
DMAFN1  STA   DMACTL
        LDU   OPICT,X
DMAFON  STU   OLDPIC,X
        LDU   OBJDAT,U
        STU   DMAORG
        LDA   OX16,X
        LDB   OY16,X
        STD   OBJX,X
        STD   DMADES
        LDA   #$A
        LDB   OX16+1,X
        STB   OFLAV,X
        BPL   DMAFN2
        ORA   #$20
DMAFN2  STA   DMACTL
        PULS  D,U,PC,CC
;*
;*SCREEN CLEAR
;*
SCRCLV  PSHS  D,X,Y,U
        LDU   #RAM
        LDX   #0
        TFR   X,Y
        TFR   X,D
SCLRLP  PSHU  X,Y,D
        PSHU  X,Y,D
        PSHU  X,Y,D
        PSHU  X,Y,D
        PSHU  X,Y,D
        PSHU  X                ;32 AT A CRACK
        CMPU  #0
        BNE   SCLRLP
        PULS  D,X,Y,U,PC
;*
;*SCORE ROUTINE
;*A=0-7EXP,B=0-99
;*
SCOREV  PSHS  A,B,X,U,Y
        INC   SCRFLG
        LSRA 
        PSHS  A
        LDA   #0
        BCC   SCR1
        ASLB 
        ROLA 
        ASLB 
        ROLA 
        ASLB 
        ROLA 
        ASLB 
        ROLA 
SCR1    JSR   PLINDX
        STD   XTEMP
        LDB   #3
        SUBB  ,S+
        LDA   B,X
        ADDA  XTEMP+1
        DAA  
        STA   B,X
        DECB 
        BMI   SCRX
SCR2    LDA   B,X
        ADCA  XTEMP
        DAA  
        STA   B,X
        LDA   #0
        STA   XTEMP
        DECB 
        BPL   SCR2
;*CHECK REPLAY
SCRX    LDD   REPLA            ;REPLAYS AVAILABLE
        BEQ   SCRXX            ;NO
        LEAY  4,X
        LDD   ,X
        CMPD  ,Y
        BNE   RCHX
        LDD   2,X
        CMPD  2,Y
RCHX    BLO   SCRXX            ;NO
        LDA   2,Y              ;GET NEXT LEVEL
        ADDA  REPLA+1
        DAA  
        STA   2,Y
        LDA   1,Y
        ADCA  REPLA
        DAA  
        STA   1,Y
        LDA   ,Y
        ADCA  #0
        DAA                    ; ASSHOLE ASSOCIATION
        STA   ,Y
        LDD   #RPSND           ;REPLAY HERE
        JSR   SNDLD
        JSR   PLINDX
        INC   PLAS,X
        JSR   MANDSP           ;SHOW EM HIS MEN
        LDB   #5
        JSR   AUD1             ;INC REPLAY CNTR
SCRXX   BSR   SCRTRV
        PULS  A,B,X,U,Y
        RTS  
;*
;*SCORE TRANSFER
;*
SCRTRV  LDA   CURPLR
SCRT0V  LDB   #$11
        CMPA  CURPLR
        BNE   SCRTR1
        LDB   #$AA             ;FLASHING NUMBERS
SCRTR1  PSHS  A
        STB   TEXCOL           ;COLOR
        DECA 
        BNE   SCT1
        LDX   #P1DISP
        LDU   #ZP1SCR
        BRA   SCT2
SCT1    LDX   #P2DISP
        LDU   #ZP2SCR
SCT2    LDD   #$1506
        JSR   BLKCLR           ;OFF CARDBOARD
        LEAX  -$300,X          ;7 NOT 8 DIGITS
        CLR   TEXTP3           ;BLANK
        LDA   ,U
        ANDA  #$F
        JSR   PRSCR
        LDA   1,U
        JSR   PRSCR
        LDA   2,U
        JSR   PRSCR
        INC   TEXTP3
        LDA   3,U
        JSR   PRSCR            ;LAST 2 ALWAYS ON
        PULS  A,PC
;*
;*INTERRUPT ROUTINE
;*
IRQV    LDA   PIA1
        LDA   #1
        ORA   RWCTMP
        STA   RWCNTL
        LDA   VERTCT           ;PAST 128
        CMPA  #128
        BLO   I0               ;NO
        LDA   IFLG             ;ALREADY DONE ?
        BNE   IRQX1            ;NO
        INC   IFLG
        INC   TIMER
        JSR   SNDSEQ           ;SOUNDS+SWITCHES
        JSR   PLAYER
        LDA   VERTCT
        CLR   DMACON
        LDB   RWCTMP
        BITB  #2
        BEQ   IRQ1             ;NO COCK
        ADDA  #$10
        STA   XXX2
        JSR   OPB80
        JSR   PLA0
IRQX1   BRA   IRQX
IRQ1    SUBA  #$10
        STA   XXX2
        JSR   OPRC80
        JSR   PLA80
        BRA   IRQX
I0      LDB   IFLG
        BEQ   IRQX
        CLR   IFLG
        INC   TIMER
        LDB   #WDATA
        STB   WDOG
        CMPA  #4               ;TOO LATE?
        BHI   I01
;*COLOR MAPPING
        LDU   #CRAM+16
        LDD   PCRAM+10
        LDX   PCRAM+12
        LDY   PCRAM+14
        PSHU  D,X,Y
        LDD   PCRAM+4
        LDX   PCRAM+6
        LDY   PCRAM+8
        PSHU  D,X,Y
        LDD   PCRAM
        LDX   PCRAM+2
        PSHU  D,X
I01     EQU   *
        INC   FRAME
        JSR   CSCAN            ;SCAN COIN SWITCHES
        CLR   DMACON
        LDB   RWCTMP
        BITB  #2
        BEQ   IRQ2             ;NO COCK
        JSR   OPB0
        JSR   PLA80
        BRA   IRQX
IRQ2    JSR   OPRC0            ;OBJEX
        JSR   PLA0             ;HANDLE PLAYER
IRQX    LDA   RWCTMP
        STA   RWCNTL
        RTI  
;*OBJECT UPDATE COCKTAIL LINE 0
OPB0    LDA   STATUS
        BITA  #$08
        BNE   OPB0X
        LDX   OPTR
        BEQ   OPB0X
OPBLP0  LDD   OBJX,X
        CMPB  XXX2
        BHI   OPB0LP
        JSR   OBJOUT
OPB0LP  LDX   ,X
        BNE   OPBLP0
OPB0X   RTS  
;*OBJECT UPDATE COCKTAIL LINE80
OPB80   LDA   STATUS
        BITA  #8
        BNE   O80
        LDX   OPTR
        BEQ   OB80X
OB8LP0  LDD   OX16,X
        LDU   OPICT,X
        ADDD  OXV,X
        CMPA  #XMIN
        BLO   OB81             ;OUT OF BOUNDS
        ADDA  OBJW,U           ;WIDTH CHECK
        CMPA  #XMAX+1
        BHI   OB81             ;OUT OF BOUNDS
        SUBA  OBJW,U
        STD   OX16,X
OB81    LDD   OY16,X
        ADDD  OYV,X
        CMPA  #YMIN
        BLO   OB82
        ADDA  OBJH,U
        CMPA  #YMAX+1
        BHI   OB82
        SUBA  OBJH,U
        STD   OY16,X
OB82    LDD   OBJX,X
        CMPB  XXX2
        BLS   OB80LP
        JSR   OBJOUT
OB80LP  LDX   ,X
        BNE   OB8LP0
OB80X   RTS  
;*PLAYER OUTPUT 80
PLA80   LDA   STATUS
        BITA  #$10
        BNE   P80X
        LDX   #PLOBJ
        LDD   PX
        CMPB  XXX2
        BLS   PLA1
P80X    RTS  
;*PLAYER OUPUT 0
PLA0    LDA   STATUS
        BITA  #$10
        BNE   P80X
        LDX   #PLOBJ
        LDD   PX
        CMPB  XXX2
        BHI   OBJOUT
        RTS  
PLA1    BRA   OBJOUT
;*OBJECT UPDATE LINE 0
OPRC0   LDA   STATUS
        BITA  #$08
        BNE   OP0X
        LDX   OPTR
        BEQ   OP0X
OP0LP0  LDD   OBJX,X
        CMPB  XXX2
        BLS   OP0LP
        BSR   OBJOUT
OP0LP   LDX   ,X
        BNE   OP0LP0
OP0X    RTS  
;*
;*NO VELOCITY REFRESH ONLY
;*
O80     LDA   STATUS
        BITA  #2
        BNE   O80X
        LDA   FRAME
        ANDA  #7
        BNE   O80X
        LDX   OPTR
        BEQ   O80X
O80LP0  LDD   OBJX,X
        BSR   OBJOUT
O80LP   LDX   ,X
        BNE   O80LP0
O80X    RTS  
;*OBJECT UPDATE LINE80
OPRC80  LDA   STATUS
        BITA  #8
        BNE   O80
        LDX   OPTR
        BEQ   OP80X
OP8LP0  LDD   OX16,X
        LDU   OPICT,X
        ADDD  OXV,X
        CMPA  #XMIN
        BLO   OP81             ;OUT OF BOUNDS
        ADDA  OBJW,U           ;WIDTH CHECK
        CMPA  #XMAX+1
        BHI   OP81             ;OUT OF BOUNDS
        SUBA  OBJW,U
        STD   OX16,X
OP81    LDD   OY16,X
        ADDD  OYV,X
        CMPA  #YMIN
        BLO   OP82
        ADDA  OBJH,U
        CMPA  #YMAX+1
        BHI   OP82
        SUBA  OBJH,U
        STD   OY16,X
OP82    LDD   OBJX,X
        CMPB  XXX2
        BHI   OP80LP
        BSR   OBJOUT
OP80LP  LDX   ,X
        BNE   OP8LP0
OP80X   RTS  
;*
;*OUTPUT OBJECT
;*D= OBJX,X; X=OBJ
OBJOUT  STD   DMADES
        LDU   OLDPIC,X
        PULU  D,Y
        EORA  #4
        EORB  #4
        STD   DMASIZ
        STY   DMAORG
        LDA   #$1A
        LDB   OFLAV,X
        BPL   DMA1
        ORA   #$20
DMA1    STA   DMACTL
        LDA   OX16,X
        LDB   OY16,X
        STD   OBJX,X
        STD   DMADES
        LDU   OPICT,X
        STU   OLDPIC,X
        LDD   OBJDAT,U
        STD   DMAORG
        LDA   #$A
        LDB   OX16+1,X
        STB   OFLAV,X
        BPL   DMA2
        ORA   #$20
DMA2    STA   DMACTL
        RTS  
;*
;*AREA SCAN U=X,Y ADDR; D=W,H
;*
ASCANV  PSHS  D,U,X
        LDX   #HCK1+$4112
        PSHS  D
        LDB   #$FE
        ANDB  RWCTMP
        STB   RWCTMP
        STB   RWCNTL
        CLRB 
        DEC   1,S
ASC0    LDA   1,S
ASC1    ORB   A,U
        DECA 
        BPL   ASC1
        LDA   #$37             ;WHAT IT SHOULD BE
        LEAU  $100,U
        DEC   ,S
        BNE   ASC0

        CMPA  -$4112,X         ;GET HIDDEN GUY
        BEQ   NOZAPP

        IF    1               ;Fixme was:IFNC  &A,NO
        LDA   LSEED            ;SEE IF TIME TO
        CMPA  #1
        BHI   NOZAPP           ;NOT THIS TIME
        PSHS  B
        LDB   HSEED
        LDA   #$98
        TFR   D,X
        DEC   ,X               ;1 LESS
        PULS  B
        ENDIF

NOZAPP  LDA   #1
        ORA   RWCTMP
        STA   RWCTMP
        STA   RWCNTL
        TSTB 
        LEAS  2,S
        PULS  D,U,PC,X
;*
;*PRIME REAL ESTATE HANDLER FOR LOGO PROGRAM
;*D=SIZE, X=ORIGIN, Y=DEST BLOCK TO SERIAL
;*
RWMOVV  PSHS  X,D,Y
        PSHS  D,X
        LDB   RWCTMP
        ANDB  #$FE             ;READ SCREEN
        STB   RWCTMP
        STB   RWCNTL
RWM1    LDB   ,X
        STB   ,Y+
        LEAX  $100,X
        DECA 
        BNE   RWM1
        LDX   2,S
        LEAX  1,X
        STX   2,S
        LDA   ,S
        DEC   1,S
        BNE   RWM1
        LEAS  4,S
        LDA   RWCTMP
        ORA   #1               ;READ ROM
        STA   RWCTMP
        STA   RWCNTL
        PULS  X,D,Y,PC

        FCC   " ROBOTRON: 2084 (TM) "
        FCC   " COPYRIGHT 1982 WILLIAMS ELECTRONICS INC. "
        FCC   "  ALL RIGHTS RESERVED"
;*
;*VECTORS
;*
        ORG   VECTOR
        FDB   INITV,INITV,INITV,INITV,IRQV,INITV,INITV,INITV
;        END  